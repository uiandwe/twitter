{"ts":1363334147228,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\ntwitter ��  Ʈ���� ��� �̿��Ͽ� ������ Ʈ������ ����� ī���� ������ �մϴ�.\n\n1. ���� ����\n  - app.js : ���� \n  - index.html : Ŭ���̾�Ʈ\n\n\n2. ���� ����\n  - request : Ŭ���̾�Ʈ ����\n  - JSONStream : JSON ���� �Ľ�\n  - event-stream : JSON �Ľ� ������ ������ ���� \n  - async : �Ľ̿� ���� �䷯��ó��\n  - socket.io : Ŭ���̾�Ʈ���� ������ ����\n  - express : �������� �� ����\n\n\n3. �ڵ� ����\n  - thread1()�Լ��� �������� ó���˴ϴ�.\n    JSONStream �ļ��� ���ؼ� ��û�� ����� �Ľ��� ���� �����ڵ�(iso_language_code) �� \n    Ʈ����(text)�� ������ �迭�� ���ʷ� �ֽ��ϴ�. \n    ���� �����ʹ� �з����� ������ �� ������ �������� Ŭ���̾�Ʈ�� socket.io�� ���۵ǰ� \n    Ŭ���̾�Ʈ��(index.html)���� ���� �����͵��� ���ʷ� �����ָ� ī�����մϴ�.\n\n\n- �ѱ����� �Ͼ ���� ������ ������ �߽��� �ѱ����� ���� �˻��ϱ� �����Դϴ�.\n  (�ѱ����� �ݰ� 12500km�� �˻��մϴ�.)\n\n- node.js �������� 3�ϸ��� �����Ŷ� ���� �����մϴ�. ��ĥ���� �ִٸ� ���α׿� �����ּ���\n  (uiandwe.tistory.com)\n\n- ���� �� ������ ������ �ϼŵ� �˴ϴ�.\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":928}]],"length":928}
{"contributors":[],"silentsave":false,"ts":1363334157372,"patch":[[{"diffs":[[-1,"\ntwitter ��  Ʈ���� ��� �̿��Ͽ� ������ Ʈ������ ����� ī���� ������ �մϴ�.\n\n1. ���� ����"],[1,"1. 프로젝트 설명\r\n  - twitter-uiandwe 프로젝트는  트위터 쿼리를 이용하여 공개된 트윗의 언어별로 \r\n    카운팅 기능을 합니다.\r\n\r\n2. 제작 기간\r\n  - 2013 02 19 ~ 21\r\n\r\n3. 파일 구성\r"],[0,"\n  -"]],"start1":0,"start2":0,"length1":88,"length2":133},{"diffs":[[0,"pp.js : "],[-1,"���� "],[1,"서버 \r"],[0,"\n  - ind"]],"start1":135,"start2":135,"length1":21,"length2":20},{"diffs":[[0,"l : "],[-1,"Ŭ���̾�Ʈ\n\n\n2. ���� ����"],[1,"클라이언트\r\n\r\n\r\n4. 사용 모듈\r"],[0,"\n  -"]],"start1":161,"start2":161,"length1":30,"length2":28},{"diffs":[[0,"t : "],[-1,"Ŭ���̾�Ʈ ����"],[1,"클라이언트 응답\r"],[0,"\n  -"]],"start1":196,"start2":196,"length1":20,"length2":17},{"diffs":[[0," : JSON "],[-1,"���� �Ľ�"],[1,"파일 파싱\r"],[0,"\n  - eve"]],"start1":224,"start2":224,"length1":24,"length2":22},{"diffs":[[0,"SON "],[-1,"�Ľ� ������ ������ ���� \n  - async : �Ľ̿� ���� �䷯��ó��\n  - socket.io : Ŭ���̾�Ʈ���� ������ ����\n  - express : �������� �� ����\n\n\n3. �ڵ� ����\n  - thread1()�Լ��� �������� ó���˴ϴ�.\n    JSONStream �ļ��� ���ؼ� ��û�� ����� �Ľ��� ���� �����ڵ�"],[1,"파싱 데이터 파이프 연결 \r\n  - async : 파싱에 대한 페러럴처리\r\n  - socket.io : 클라이언트로의 데이터 수신\r\n  - express : 서버실행 및 관리\r\n\r\n\r\n5. 코드 설명\r\n  - thread1()함수에 모든것이 처리됩니다.\r\n    JSONStream 파서에 의해서 요청된 쿼리문을 파싱한 다음 언어코드"],[0,"(iso"]],"start1":259,"start2":259,"length1":241,"length2":194},{"diffs":[[0,"de) "],[-1,"�� "],[1,"와 \r"],[0,"\n    "],[-1,"Ʈ����"],[1,"트윗글"],[0,"(text)"],[-1,"�� ������ �迭�� ���ʷ� �ֽ��ϴ�"],[1,"를 각각의 배열에 차례로 넣습니다"],[0,". "],[1,"\r"],[0,"\n    "],[-1,"���� �����ʹ� �з����� ������ �� ������ �������� Ŭ���̾�Ʈ�� socket.io�� ���۵ǰ� \n    Ŭ���̾�Ʈ��(index.html)���� ���� �����͵��� ���ʷ� �����ָ� ī�����մϴ�.\n\n\n- �ѱ����� �Ͼ ���� ������ ������ �߽��� �ѱ����� ���� �˻��ϱ� �����Դϴ�.\n  (�ѱ����� �ݰ� 12500km�� �˻��մϴ�.)\n\n- node.js �������� 3�ϸ��� �����Ŷ� ���� �����մϴ�. ��ĥ���� �ִٸ� ���α׿� �����ּ���\n  (uiandwe.tistory.com)\n\n- ���� �� ������ ������ �ϼŵ� �˴ϴ�.\n\n\n\n"],[1,"넣은 데이터는 패러럴이 끝나는 맨 마지막 시점에서 클라이언트로 socket.io로 전송되고 \r\n    클라이언트단(index.html)에서 받은 데이터들을 차례로 보여주며 카운팅합니다.\r\n\r\n\r\n- 한국어과 일어가 많은 이유는 쿼리의 중심이 한국에서 부터 검색하기 때문입니다.\r\n  (한국에서 반경 12500km를 검색합니다.)\r\n\r\n- node.js 공부한지 3일만에 만든거라 많이 부족합니다. 수정 부분/ 문의사항이 있다면 \r\n  블로그에 남겨주세요 (uiandwe.tistory.com)\r\n\r\n- 배포 및 수정은 마음껏 하셔도 됩니다."]],"start1":465,"start2":465,"length1":453,"length2":349}]],"length":814,"saved":false}
